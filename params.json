{"name":"Hubot GitHub Deployments","tagline":"Integrate with GitHub deployment API","body":"## Getting Started\r\n\r\nThis module allows you to create payloads to send to the [GitHub Deployment API](https://developer.github.com/v3/repos/deployments/), then check on the status of the deployments. Combined with a deployment tool that listens to organizational or repository [DeploymentEvent](https://developer.github.com/v3/activity/events/types/#deploymentevent) webhooks, this module can help automate that process via ChatOps.\r\n\r\n## Installation\r\n\r\nIn your hubot repository, run:\r\n\r\n`npm install hubot-github-deployments --save`\r\n\r\nThen add **hubot-github-deployments** to your `external-scripts.json`:\r\n\r\n```json\r\n[\"hubot-github-deployments\"]\r\n```\r\n\r\n## Configuration:\r\n\r\n### Heroku\r\n\r\n```\r\nheroku config:set HUBOT_GITHUB_TOKEN=<User Application Token>\r\nheroku config:set HUBOT_GITHUB_USER=<User for Deployments>\r\nheroku config:set HUBOT_GITHUB_DEPLOY_TARGETS=<Comma Seperated List of Environments>\r\nheroku config:set HUBOT_GITHUB_REPO=<Repository to deploy, in :user_or_org/:repository format>\r\n```\r\n\r\n### Standard\r\n\r\n```\r\nexport HUBOT_GITHUB_TOKEN=<User Application Token>\r\nexport HUBOT_GITHUB_USER=<User for Deployments>\r\nexport HUBOT_GITHUB_DEPLOY_TARGETS=<Comma Seperated List of Environments>\r\nexport HUBOT_GITHUB_REPO=<Repository to deploy, in :user_or_org/:repository format>\r\n```\r\n\r\n## Commands:\r\n\r\n- `hubot deploy status` - List the status of most recent deployments\r\n- `hubot deploy status <id>` - List the statuses a particular deployment\r\n- `hubot deploy list targets` - List available deployment targets\r\n- `hubot deploy list branches <search>` - List available branches, filtered by optional search term\r\n- `hubot deploy <branch or SHA> to <server>` - Creates a Github deployment of a branch/SHA to a server\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}